{
glyphname = asterisk;
kernLeft = KO_asterisk;
layers = (
{
hints = (
{
horizontal = 1;
place = (350,400);
type = Stem;
},
{
place = (156,65);
type = Stem;
}
);
layerId = m005;
shapes = (
{
closed = 1;
nodes = (
(236,354,l),
(254,362,l),
(263,375,l),
(262,393,l),
(260,405,l),
(272,425,l),
(272,442,l),
(294,436,l),
(299,426,l),
(316,422,l),
(331,412,l),
(347,411,l),
(362,422,l),
(380,447,l),
(388,461,l),
(388,480,l),
(382,493,l),
(368,511,l),
(350,512,l),
(343,524,l),
(338,532,l),
(355,542,l),
(368,550,l),
(382,560,l),
(392,568,l),
(404,579,l),
(412,587,l),
(408,598,l),
(406,629,l),
(394,631,l),
(383,636,l),
(372,641,l),
(355,633,l),
(340,627,l),
(334,614,l),
(317,610,l),
(297,596,l),
(294,608,l),
(291,621,l),
(294,631,l),
(304,652,l),
(295,679,l),
(299,686,l),
(285,695,l),
(252,694,l),
(235,690,l),
(223,687,l),
(215,671,l),
(215,649,l),
(216,632,l),
(205,617,l),
(206,610,l),
(207,595,l),
(195,604,l),
(188,609,l),
(175,613,l),
(166,619,l),
(144,631,l),
(127,628,l),
(120,628,l),
(100,596,l),
(98,578,l),
(101,569,l),
(128,551,l),
(136,549,l),
(147,534,l),
(154,522,l),
(146,512,l),
(126,501,l),
(112,492,l),
(97,486,l),
(79,478,l),
(75,469,l),
(79,453,l),
(80,428,l),
(95,416,l),
(109,409,l),
(125,415,l),
(138,419,l),
(151,432,l),
(158,441,l),
(174,443,l),
(184,425,l),
(178,415,l),
(170,402,l),
(172,392,l),
(176,379,l),
(175,360,l),
(182,360,l),
(201,349,l)
);
}
);
width = 399;
},
{
hints = (
{
horizontal = 1;
place = (350,400);
type = Stem;
},
{
place = (156,65);
type = Stem;
}
);
layerId = m002;
shapes = (
{
closed = 1;
nodes = (
(197,327,l),
(216,325,l),
(228,325,l),
(240,339,l),
(262,347,l),
(268,359,l),
(275,376,l),
(285,389,l),
(289,401,l),
(301,394,l),
(313,382,l),
(327,381,l),
(334,388,l),
(346,392,l),
(363,405,l),
(374,413,l),
(394,435,l),
(408,454,l),
(409,468,l),
(410,487,l),
(405,502,l),
(378,525,l),
(374,533,l),
(373,541,l),
(402,548,l),
(412,555,l),
(415,570,l),
(425,587,l),
(425,601,l),
(429,611,l),
(414,640,l),
(411,644,l),
(397,655,l),
(386,667,l),
(373,665,l),
(345,660,l),
(332,651,l),
(314,649,l),
(320,661,l),
(310,679,l),
(313,694,l),
(307,701,l),
(302,718,l),
(286,724,l),
(270,720,l),
(240,718,l),
(238,720,l),
(221,713,l),
(203,705,l),
(184,693,l),
(183,673,l),
(174,656,l),
(174,641,l),
(167,649,l),
(155,649,l),
(142,658,l),
(131,661,l),
(105,654,l),
(92,642,l),
(86,633,l),
(59,608,l),
(55,595,l),
(64,584,l),
(60,575,l),
(71,557,l),
(70,549,l),
(85,530,l),
(107,525,l),
(84,517,l),
(67,503,l),
(59,489,l),
(50,481,l),
(43,463,l),
(37,447,l),
(35,440,l),
(45,412,l),
(62,401,l),
(71,388,l),
(86,380,l),
(90,386,l),
(111,382,l),
(124,393,l),
(141,402,l),
(134,394,l),
(130,372,l),
(136,361,l),
(142,350,l),
(154,332,l),
(166,334,l),
(185,328,l)
);
}
);
width = 376;
},
{
hints = (
{
horizontal = 1;
place = (350,400);
type = Stem;
},
{
place = (156,65);
type = Stem;
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(233,349,l),
(253,359,l),
(268,391,l),
(260,404,l),
(268,418,l),
(275,429,l),
(266,442,l),
(280,464,l),
(293,459,l),
(305,443,l),
(309,441,l),
(326,428,l),
(336,421,l),
(359,406,l),
(373,423,l),
(398,440,l),
(401,459,l),
(394,475,l),
(370,489,l),
(364,491,l),
(350,502,l),
(345,511,l),
(331,521,l),
(312,523,l),
(330,543,l),
(348,543,l),
(363,553,l),
(375,564,l),
(388,573,l),
(407,589,l),
(424,605,l),
(409,634,l),
(396,635,l),
(378,634,l),
(363,620,l),
(350,609,l),
(328,610,l),
(308,594,l),
(294,584,l),
(289,603,l),
(290,616,l),
(300,630,l),
(293,638,l),
(304,654,l),
(300,682,l),
(295,698,l),
(255,698,l),
(241,691,l),
(235,659,l),
(241,641,l),
(237,626,l),
(227,616,l),
(230,596,l),
(220,581,l),
(217,593,l),
(196,601,l),
(188,605,l),
(167,608,l),
(170,624,l),
(140,635,l),
(122,628,l),
(99,598,l),
(108,593,l),
(130,568,l),
(143,565,l),
(154,557,l),
(156,551,l),
(175,539,l),
(192,524,l),
(184,514,l),
(171,507,l),
(153,502,l),
(140,486,l),
(121,483,l),
(109,481,l),
(83,457,l),
(84,445,l),
(85,417,l),
(97,406,l),
(131,425,l),
(153,433,l),
(167,441,l),
(189,459,l),
(205,467,l),
(203,452,l),
(200,434,l),
(199,416,l),
(193,393,l),
(188,365,l),
(200,356,l)
);
}
);
width = 412;
}
);
metricLeft = "=period";
metricRight = period;
note = asterisk;
unicode = 42;
userData = {
KernOnSpecialSpacing = {
L = quotes;
R = quotes;
};
};
}
