{
glyphname = emdash;
kernLeft = KO_endash;
kernRight = KO_endash;
layers = (
{
hints = (
{
horizontal = 1;
place = (218,65);
type = Stem;
},
{
place = (40,650);
type = Stem;
}
);
layerId = m005;
shapes = (
{
closed = 1;
nodes = (
(709,252,l),
(716,273,l),
(711,278,l),
(693,286,l),
(665,287,l),
(661,291,l),
(635,290,l),
(632,289,l),
(619,294,l),
(598,287,l),
(574,291,l),
(559,286,l),
(556,292,l),
(532,292,l),
(523,286,l),
(506,293,l),
(492,288,l),
(478,289,l),
(458,285,l),
(452,291,l),
(434,289,l),
(424,285,l),
(404,287,l),
(390,291,l),
(377,294,l),
(350,287,l),
(338,291,l),
(333,286,l),
(311,292,l),
(293,286,l),
(281,294,l),
(271,291,l),
(246,285,l),
(231,290,l),
(221,285,l),
(215,292,l),
(201,292,l),
(173,291,l),
(150,287,l),
(135,289,l),
(112,289,l),
(98,286,l),
(92,292,l),
(67,288,l),
(55,285,l),
(38,266,l),
(38,242,l),
(40,223,l),
(48,211,l),
(70,210,l),
(94,206,l),
(99,209,l),
(114,214,l),
(131,217,l),
(147,214,l),
(164,214,l),
(182,210,l),
(203,217,l),
(223,213,l),
(247,217,l),
(259,212,l),
(273,219,l),
(280,216,l),
(305,220,l),
(317,215,l),
(336,214,l),
(350,216,l),
(357,219,l),
(382,215,l),
(385,223,l),
(403,222,l),
(424,215,l),
(438,222,l),
(457,224,l),
(471,221,l),
(483,216,l),
(517,218,l),
(523,215,l),
(546,220,l),
(558,218,l),
(565,218,l),
(587,222,l),
(596,219,l),
(617,215,l),
(627,223,l),
(649,221,l),
(661,224,l),
(688,226,l),
(695,233,l),
(710,242,l)
);
}
);
width = 768;
},
{
hints = (
{
horizontal = 1;
place = (218,65);
type = Stem;
},
{
place = (40,650);
type = Stem;
}
);
layerId = m002;
shapes = (
{
closed = 1;
nodes = (
(801,259,l),
(800,271,l),
(793,281,l),
(799,295,l),
(793,316,l),
(771,324,l),
(762,332,l),
(750,331,l),
(745,338,l),
(704,338,l),
(698,344,l),
(665,338,l),
(653,343,l),
(617,338,l),
(600,337,l),
(578,335,l),
(554,343,l),
(542,338,l),
(524,344,l),
(513,336,l),
(497,335,l),
(466,342,l),
(446,342,l),
(428,335,l),
(413,336,l),
(390,335,l),
(378,343,l),
(350,342,l),
(332,335,l),
(323,341,l),
(307,338,l),
(278,342,l),
(254,336,l),
(240,344,l),
(229,341,l),
(189,335,l),
(154,342,l),
(128,343,l),
(102,334,l),
(77,332,l),
(57,324,l),
(34,308,l),
(19,286,l),
(18,251,l),
(8,239,l),
(19,224,l),
(16,203,l),
(30,189,l),
(27,180,l),
(41,166,l),
(59,162,l),
(62,164,l),
(96,157,l),
(106,161,l),
(121,158,l),
(139,162,l),
(170,159,l),
(198,168,l),
(225,163,l),
(231,167,l),
(248,161,l),
(270,169,l),
(286,171,l),
(314,167,l),
(316,164,l),
(334,171,l),
(358,172,l),
(377,172,l),
(419,171,l),
(442,173,l),
(455,166,l),
(472,166,l),
(493,174,l),
(506,167,l),
(527,168,l),
(557,173,l),
(573,170,l),
(594,170,l),
(618,168,l),
(642,168,l),
(656,173,l),
(675,173,l),
(677,166,l),
(715,171,l),
(734,173,l),
(741,180,l),
(760,187,l),
(782,207,l),
(779,226,l),
(784,235,l)
);
}
);
width = 808;
},
{
hints = (
{
horizontal = 1;
place = (218,65);
type = Stem;
},
{
place = (40,650);
type = Stem;
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(736,253,l),
(739,269,l),
(727,280,l),
(705,284,l),
(685,278,l),
(664,282,l),
(656,283,l),
(644,282,l),
(627,279,l),
(616,280,l),
(599,279,l),
(581,277,l),
(572,278,l),
(557,282,l),
(534,284,l),
(512,284,l),
(495,279,l),
(482,283,l),
(457,276,l),
(447,279,l),
(435,276,l),
(411,278,l),
(407,276,l),
(382,275,l),
(377,284,l),
(361,277,l),
(343,281,l),
(327,278,l),
(314,275,l),
(291,282,l),
(287,284,l),
(273,283,l),
(260,281,l),
(239,282,l),
(219,276,l),
(206,275,l),
(188,280,l),
(184,275,l),
(167,279,l),
(144,281,l),
(125,277,l),
(116,283,l),
(93,281,l),
(86,269,l),
(73,259,l),
(66,233,l),
(76,224,l),
(87,221,l),
(101,218,l),
(116,221,l),
(129,224,l),
(143,218,l),
(149,223,l),
(170,222,l),
(187,219,l),
(215,220,l),
(224,229,l),
(252,229,l),
(261,225,l),
(279,224,l),
(288,230,l),
(310,228,l),
(311,225,l),
(328,226,l),
(353,227,l),
(358,232,l),
(379,228,l),
(398,226,l),
(402,232,l),
(419,233,l),
(440,232,l),
(466,229,l),
(491,233,l),
(494,228,l),
(519,225,l),
(532,233,l),
(545,229,l),
(558,226,l),
(577,226,l),
(583,225,l),
(603,231,l),
(612,234,l),
(631,233,l),
(645,229,l),
(668,234,l),
(680,233,l),
(690,228,l),
(703,228,l),
(724,229,l),
(735,240,l)
);
}
);
width = 808;
}
);
metricLeft = "=n";
metricRight = "=n";
note = emdash;
unicode = 8212;
userData = {
KernOnSpecialSpacing = {
L = dashes;
R = dashes;
};
};
}
